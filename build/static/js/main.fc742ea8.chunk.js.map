{"version":3,"sources":["DataService.js","Number.js","Search.js","Numbers.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","console","log","delete","Button","props","onClick","window","confirm","person","name","service","d","setP","catch","err","setM","text","type","setTimeout","Number","smode","persons","filter","p","toLowerCase","searchString","map","key","number","setMess","Search","Numbers","Notification","messageObj","styleApplied","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newPerson","setNewPerson","newSearchString","setNewSearchString","message","setMessage","useEffect","value","onChange","event","target","onSubmit","preventDefault","index","indexOf","r","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc742ea8.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (id) => {\n    console.log('------####',id)\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response)\n  }\n  \n\nexport default { getAll, create, update ,del}\n","import React  from 'react'\nimport service from './DataService'\n\nconst Button=(props)=>{\nconsole.log(props)\n  const clickDel=()=>{\n    return ()=>{\n      let res=window.confirm(`Delete ${props.person.name} ?`)\n      if(res){\n        service.del(props.person.id).then(data=>{\n          service.getAll().then(d => props.setP(d)).catch(err=> console.log('fail'))        \n        }).catch(err=>{props.setM({text:`error deleting ${props.person.name}`,type:'e'})\n        setTimeout(()=>{props.setM({text:null,type:null})},5000)\n\n      })\n      }\n    }\n   }\n\n   return (<button onClick={clickDel()}>delete</button>)\n}\n\nconst Number=(props)=>{\n  console.log(props)\n    const getNamesForNumbers =() => props.persons.map((p)=> <li key={p.id}>{p.name} {p.number} <Button  setP={props.setP}  setM={props.setMess} person={p}/></li>)\n    const getNamesForSearch =() => props.persons.filter(p => p.name.toLowerCase()===props.searchString.toLowerCase()).map((p)=> <li key={p.id}>{p.name} {p.number} </li>)\n    \n      if(props.smode==='y'){\n        return <ul>{getNamesForSearch()}</ul>;\n      }else{\n        return <ul>{getNamesForNumbers()}</ul>;\n      }\n  }\n\n  export default Number","import React  from 'react'\nimport Number from './Number'\nconst Search=(props)=>{\n    return (\n      <Number searchString={props.searchString} persons={props.persons} smode={'y'} setP={props.setP}></Number>\n    )\n  }\n\n  export default Search","import React  from 'react'\nimport Number from './Number'\nconst Numbers=(props)=>{\n  console.log(props)\n    return (\n      <>\n      <h2>Numbers</h2>\n      <Number searchString={''} persons={props.persons} smode={'n'} setP={props.setP} setMess={props.setM}></Number>\n      </>\n    )\n  }\n\n  export default Numbers","import React, { useState,useEffect } from 'react'\nimport Search from \"./Search\"\nimport Numbers from \"./Numbers\"\nimport service from \"./DataService\"\n\nconst Notification=(props)=>{\n\n  console.log(props)\n  const {text,type}=props.messageObj\n  const styleUpdated={ \n    color: 'blue',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n    }\n  const styleCreated={ \n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  const styleError={ \n    color: 'red',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10\n  }\n  if(text===null){\n    return null\n  }\n\nlet styleApplied=null\n  if(type==='c'){\n    styleApplied=styleCreated  \n  }else if(type==='u'){\n    styleApplied=styleUpdated  \n  }else if(type==='e'){\n    styleApplied=styleError   \n  }\nconsole.log(styleApplied)\n  return (\n    <div style={styleApplied} >\n      {text}\n    </div>\n  )\n}\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [newName,setNewName]= useState('')\n  const [newNumber,setNewNumber]= useState('')\n  const [ newPerson, setNewPerson ] = useState({name:'',number:'', id:''})\n  const [newSearchString,setNewSearchString]=useState('')\n  const [message,setMessage]=useState({text:null,type:null})\n\n  useEffect(()=>{\n    service.getAll().then(data=>{\n      setPersons(data)\n    })\n  },[])\n\n  const handleSearchString=(event)=>{\n    setNewSearchString(event.target.value)\n  }\n\n  const handleNameChange = (event)=>{\n    const person={\n      ...newPerson,\n      name:event.target.value\n    }\n    setNewName(event.target.value)\n    setNewPerson(person)\n  }\n\n  const handleNumberChange = (event)=>{\n    const person={\n      ...newPerson,\n      number:event.target.value\n    }\n    setNewNumber(event.target.value)\n    setNewPerson(person)\n  }\n\n\n\n  const handleClick=(event)=>{\n    event.preventDefault()\n    let index=persons.map(p=>p.name).indexOf(newName)\n    if(index>=0){\n      let res=window.confirm(`${newName} is already added to phonebook, replace the old number with a new one ?`)\n      if(res){\n        service.update(persons[index].id,{...persons[index],number:newPerson.number}).then(r=>{\n      let res=window.confirm(`${newName} is already added to phonebook, replace the old number with a new one ?`)\n          setMessage({text:`updated ${newName}`,type:'u'})\n          setTimeout(()=>{setMessage({text:null,type:null})},5000)\n          service.getAll().then(data=>{\n            setPersons(data)\n          })  \n        })\n      }\n    }else{\n      service.create(newPerson).then(response=>{\n        setMessage({text:`created  ${newPerson.name}`,type:'c'})\n        setTimeout(()=>{setMessage({text:null,type:null})},5000)\n        service.getAll().then(data=>{\n          setPersons(data)\n        })\n      }).catch( response=>\n        console.log('fail')\n      )\n    }\n    setNewName('')\n    setNewNumber('')\n    setNewPerson({name:'',number:'', id:''})\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification messageObj={message} />\n      <div>search:<input value={newSearchString} onChange={handleSearchString} /></div>\n      <Search persons={persons} searchString={newSearchString} smode={'y'} setP={setPersons} />\n      <div>\n      <h2>add a new</h2>  \n      <form onSubmit={handleClick}>\n        <div>name: <input value={newName} onChange={handleNameChange}/></div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\n        <div><button type=\"submit\">add</button></div>\n      </form> \n      </div>\n    \n      <Numbers persons={persons} searchString={newSearchString} smode={'n'} setP={setPersons} setM={setMessage}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}